Object.defineProperty(exports, "__esModule", {
  value: !0
});

var u = require("node:fs");

var D = require("node:path");

var t = require("graphql");

var i = require("@gql.tada/internal");

function toArr(u) {
  return null == u ? [] : Array.isArray(u) ? u : [ u ];
}

function toVal(u, D, t, i) {
  var s, F = u[D], C = ~i.string.indexOf(D) ? null == t || !0 === t ? "" : String(t) : "boolean" == typeof t ? t : ~i.boolean.indexOf(D) ? "false" === t ? !1 : "true" === t || (u._.push(0 * (s = +t) == 0 ? s : t), 
  !!t) : 0 * (s = +t) == 0 ? s : t;
  u[D] = null == F ? C : Array.isArray(F) ? F.concat(C) : [ F, C ];
}

function e(u, D) {
  var t, i, s, F, C, c = {
    _: []
  };
  var A = 0, E = 0, f = 0, p = (u = u || []).length;
  var B = void 0 !== (D = D || {}).alias;
  var h = void 0 !== D.unknown;
  var v = void 0 !== D.default;
  D.alias = D.alias || {};
  D.string = toArr(D.string);
  D.boolean = toArr(D.boolean);
  if (B) {
    for (t in D.alias) {
      i = D.alias[t] = toArr(D.alias[t]);
      for (A = 0; A < i.length; A++) {
        (D.alias[i[A]] = i.concat(t)).splice(A, 1);
      }
    }
  }
  for (A = D.boolean.length; A-- > 0; ) {
    for (E = (i = D.alias[D.boolean[A]] || []).length; E-- > 0; ) {
      D.boolean.push(i[E]);
    }
  }
  for (A = D.string.length; A-- > 0; ) {
    for (E = (i = D.alias[D.string[A]] || []).length; E-- > 0; ) {
      D.string.push(i[E]);
    }
  }
  if (v) {
    for (t in D.default) {
      F = typeof D.default[t];
      i = D.alias[t] = D.alias[t] || [];
      if (void 0 !== D[F]) {
        D[F].push(t);
        for (A = 0; A < i.length; A++) {
          D[F].push(i[A]);
        }
      }
    }
  }
  var g = h ? Object.keys(D.alias) : [];
  for (A = 0; A < p; A++) {
    if ("--" === (s = u[A])) {
      c._ = c._.concat(u.slice(++A));
      break;
    }
    for (E = 0; E < s.length; E++) {
      if (45 !== s.charCodeAt(E)) {
        break;
      }
    }
    if (0 === E) {
      c._.push(s);
    } else if ("no-" === s.substring(E, E + 3)) {
      F = s.substring(E + 3);
      if (h && !~g.indexOf(F)) {
        return D.unknown(s);
      }
      c[F] = !1;
    } else {
      for (f = E + 1; f < s.length; f++) {
        if (61 === s.charCodeAt(f)) {
          break;
        }
      }
      F = s.substring(E, f);
      C = s.substring(++f) || A + 1 === p || 45 === ("" + u[A + 1]).charCodeAt(0) || u[++A];
      i = 2 === E ? [ F ] : F;
      for (f = 0; f < i.length; f++) {
        F = i[f];
        if (h && !~g.indexOf(F)) {
          return D.unknown("-".repeat(E) + F);
        }
        toVal(c, F, f + 1 < i.length || C, D);
      }
    }
  }
  if (v) {
    for (t in D.default) {
      if (void 0 === c[t]) {
        c[t] = D.default[t];
      }
    }
  }
  if (B) {
    for (t in c) {
      i = D.alias[t] || [];
      while (i.length > 0) {
        c[i.shift()] = c[t];
      }
    }
  }
  return c;
}

var s = "__all__", F = "__default__", C = "\n";

function r(u) {
  if (!u.length) {
    return "";
  }
  var D = function(u) {
    var D = 0, t = 0, i = 0, s = u.length;
    if (s) {
      for (;s--; ) {
        (t = u[s].length) > D && (i = s, D = t);
      }
    }
    return u[i].length;
  }(u.map((u => u[0]))) + 4;
  return u.map((u => u[0] + " ".repeat(D - u[0].length) + u[1] + (null == u[2] ? "" : `  (default ${u[2]})`)));
}

function n(u) {
  return u;
}

function l(u, D, t) {
  if (!D || !D.length) {
    return "";
  }
  var i = 0, s = "";
  for (s += "\n  " + u; i < D.length; i++) {
    s += "\n    " + t(D[i]);
  }
  return s + C;
}

function a(u, D, t = 1) {
  var i = l("ERROR", [ D ], n);
  console.error(i += `\n  Run \`$ ${u} --help\` for more info.\n`), process.exit(t);
}

class o {
  constructor(u, D) {
    var [t, ...i] = u.split(/\s+/);
    D = D || i.length > 0, this.bin = t, this.ver = "0.0.0", this.default = "", this.tree = {}, 
    this.command(s), this.command([ F ].concat(D ? i : "<command>").join(" ")), this.single = D, 
    this.curr = "";
  }
  command(u, D, t = {}) {
    if (this.single) {
      throw new Error('Disable "single" mode to add commands');
    }
    var i = [], s = [], F = /(\[|<)/;
    if (u.split(/\s+/).forEach((u => {
      (F.test(u.charAt(0)) ? s : i).push(u);
    })), (i = i.join(" ")) in this.tree) {
      throw new Error("Command already exists: " + i);
    }
    return i.includes("__") || s.unshift(i), s = s.join(" "), this.curr = i, t.default && (this.default = i), 
    this.tree[i] = {
      usage: s,
      alibi: [],
      options: [],
      alias: {},
      default: {},
      examples: []
    }, t.alias && this.alias(t.alias), D && this.describe(D), this;
  }
  describe(u) {
    return this.tree[this.curr || F].describe = Array.isArray(u) ? u : function(u) {
      return (u || "").replace(/([.?!])\s*(?=[A-Z])/g, "$1|").split("|");
    }(u), this;
  }
  alias(...u) {
    if (this.single) {
      throw new Error('Cannot call `alias()` in "single" mode');
    }
    if (!this.curr) {
      throw new Error("Cannot call `alias()` before defining a command");
    }
    return (this.tree[this.curr].alibi = this.tree[this.curr].alibi.concat(...u)).forEach((u => this.tree[u] = this.curr)), 
    this;
  }
  option(u, D, t) {
    var i = this.tree[this.curr || s], [F, C] = function(u) {
      return (u || "").split(/^-{1,2}|,|\s+-{1,2}|\s+/).filter(Boolean);
    }(u);
    if (C && C.length > 1 && ([F, C] = [ C, F ]), u = "--" + F, C && C.length > 0) {
      u = `-${C}, ${u}`;
      i.alias[C] = (i.alias[C] || []).concat(F);
    }
    var c = [ u, D || "" ];
    return void 0 !== t ? (c.push(t), i.default[F] = t) : C || (i.default[F] = void 0), 
    i.options.push(c), this;
  }
  action(u) {
    return this.tree[this.curr || F].handler = u, this;
  }
  example(u) {
    return this.tree[this.curr || F].examples.push(u), this;
  }
  version(u) {
    return this.ver = u, this;
  }
  parse(u, D = {}) {
    var t, i, C, c, A = 2, E = e((u = u.slice()).slice(A), {
      alias: {
        h: "help",
        v: "version"
      }
    }), f = this.single, p = this.bin, B = "";
    if (f) {
      c = this.tree[F];
    } else {
      var h, v = 1, g = E._.length + 1;
      for (;v < g; v++) {
        if (t = E._.slice(0, v).join(" "), "string" == typeof (h = this.tree[t])) {
          i = (B = h).split(" "), u.splice(u.indexOf(E._[0]), v, ...i), v += i.length - v;
        } else if (h) {
          B = t;
        } else if (B) {
          break;
        }
      }
      if (C = void 0 === (c = this.tree[B])) {
        if (this.default) {
          c = this.tree[B = this.default], u.unshift(B), A++;
        } else if (t) {
          return a(p, "Invalid command: " + t);
        }
      }
    }
    if (E.help) {
      return this.help(!f && !C && B);
    }
    if (E.version) {
      return this._version();
    }
    if (!f && void 0 === c) {
      return a(p, "No command specified.");
    }
    var m = this.tree[s];
    D.alias = Object.assign(m.alias, c.alias, D.alias), D.default = Object.assign(m.default, c.default, D.default), 
    t = B.split(" "), ~(i = u.indexOf(t[0], 2)) && u.splice(i, t.length);
    var y = e(u.slice(A), D);
    if (!y || "string" == typeof y) {
      return a(p, y || "Parsed unknown option flag(s)!");
    }
    var w = c.usage.split(/\s+/), b = w.filter((u => "<" === u.charAt(0))), S = y._.splice(0, b.length);
    if (S.length < b.length) {
      return B && (p += " " + B), a(p, "Insufficient arguments!");
    }
    w.filter((u => "[" === u.charAt(0))).forEach((u => {
      S.push(y._.shift());
    })), S.push(y);
    var x = c.handler;
    return D.lazy ? {
      args: S,
      name: B,
      handler: x
    } : x.apply(null, S);
  }
  help(u) {
    console.log(function(u, D, t, i) {
      var c = "", A = D[t], E = "$ " + u, f = D[s], d = u => `${E} ${u}`.replace(/\s+/g, " "), p = [ [ "-h, --help", "Displays this message" ] ];
      if (t === F && p.unshift([ "-v, --version", "Displays current version" ]), A.options = (A.options || []).concat(f.options, p), 
      A.options.length > 0 && (A.usage += " [options]"), c += l("Description", A.describe, n), 
      c += l("Usage", [ A.usage ], d), i || t !== F) {
        i || t === F || (c += l("Aliases", A.alibi, d));
      } else {
        var B, h = /^__/, v = "", g = [];
        for (B in D) {
          "string" == typeof D[B] || h.test(B) || g.push([ B, (D[B].describe || [ "" ])[0] ]) < 3 && (v += `\n    ${E} ${B} --help`);
        }
        c += l("Available Commands", r(g), n), c += "\n  For more info, run any command with the `--help` flag" + v + C;
      }
      return c += l("Options", r(A.options), n), c += l("Examples", A.examples.map(d), n);
    }(this.bin, this.tree, u || F, this.single));
  }
  _version() {
    console.log(`${this.bin}, ${this.ver}`);
  }
}

var c = {
  exports: {}
};

c.exports = function() {
  function createCommonjsModule(u, D) {
    return u(D = {
      exports: {}
    }, D.exports), D.exports;
  }
  var u = createCommonjsModule((function(u) {
    var D = u.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    if ("number" == typeof __g) {
      __g = D;
    }
  }));
  var D = createCommonjsModule((function(u) {
    var D = u.exports = {
      version: "2.6.5"
    };
    if ("number" == typeof __e) {
      __e = D;
    }
  }));
  var _isObject = function(u) {
    return "object" == typeof u ? null !== u : "function" == typeof u;
  };
  var _anObject = function(u) {
    if (!_isObject(u)) {
      throw TypeError(u + " is not an object!");
    }
    return u;
  };
  var _fails = function(u) {
    try {
      return !!u();
    } catch (u) {
      return !0;
    }
  };
  var t = !_fails((function() {
    return 7 != Object.defineProperty({}, "a", {
      get: function() {
        return 7;
      }
    }).a;
  }));
  var i = u.document;
  var s = _isObject(i) && _isObject(i.createElement);
  var _domCreate = function(u) {
    return s ? i.createElement(u) : {};
  };
  var F = !t && !_fails((function() {
    return 7 != Object.defineProperty(_domCreate("div"), "a", {
      get: function() {
        return 7;
      }
    }).a;
  }));
  var _toPrimitive = function(u, D) {
    if (!_isObject(u)) {
      return u;
    }
    var t, i;
    if (D && "function" == typeof (t = u.toString) && !_isObject(i = t.call(u))) {
      return i;
    }
    if ("function" == typeof (t = u.valueOf) && !_isObject(i = t.call(u))) {
      return i;
    }
    if (!D && "function" == typeof (t = u.toString) && !_isObject(i = t.call(u))) {
      return i;
    }
    throw TypeError("Can't convert object to primitive value");
  };
  var C = Object.defineProperty;
  var c = {
    f: t ? Object.defineProperty : function defineProperty(u, D, t) {
      _anObject(u);
      D = _toPrimitive(D, !0);
      _anObject(t);
      if (F) {
        try {
          return C(u, D, t);
        } catch (u) {}
      }
      if ("get" in t || "set" in t) {
        throw TypeError("Accessors not supported!");
      }
      if ("value" in t) {
        u[D] = t.value;
      }
      return u;
    }
  };
  var _propertyDesc = function(u, D) {
    return {
      enumerable: !(1 & u),
      configurable: !(2 & u),
      writable: !(4 & u),
      value: D
    };
  };
  var A = t ? function(u, D, t) {
    return c.f(u, D, _propertyDesc(1, t));
  } : function(u, D, t) {
    u[D] = t;
    return u;
  };
  var E = {}.hasOwnProperty;
  var _has = function(u, D) {
    return E.call(u, D);
  };
  var f = 0;
  var p = Math.random();
  var _uid = function(u) {
    return "Symbol(".concat(void 0 === u ? "" : u, ")_", (++f + p).toString(36));
  };
  var B = createCommonjsModule((function(t) {
    var i = "__core-js_shared__";
    var s = u[i] || (u[i] = {});
    (t.exports = function(u, D) {
      return s[u] || (s[u] = void 0 !== D ? D : {});
    })("versions", []).push({
      version: D.version,
      mode: "global",
      copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
    });
  }));
  var h = B("native-function-to-string", Function.toString);
  var v = createCommonjsModule((function(t) {
    var i = _uid("src");
    var s = "toString";
    var F = ("" + h).split(s);
    D.inspectSource = function(u) {
      return h.call(u);
    };
    (t.exports = function(D, t, s, C) {
      var c = "function" == typeof s;
      if (c) {
        _has(s, "name") || A(s, "name", t);
      }
      if (D[t] === s) {
        return;
      }
      if (c) {
        _has(s, i) || A(s, i, D[t] ? "" + D[t] : F.join(String(t)));
      }
      if (D === u) {
        D[t] = s;
      } else if (!C) {
        delete D[t];
        A(D, t, s);
      } else if (D[t]) {
        D[t] = s;
      } else {
        A(D, t, s);
      }
    })(Function.prototype, s, (function toString() {
      return "function" == typeof this && this[i] || h.call(this);
    }));
  }));
  var _aFunction = function(u) {
    if ("function" != typeof u) {
      throw TypeError(u + " is not a function!");
    }
    return u;
  };
  var _ctx = function(u, D, t) {
    _aFunction(u);
    if (void 0 === D) {
      return u;
    }
    switch (t) {
     case 1:
      return function(t) {
        return u.call(D, t);
      };

     case 2:
      return function(t, i) {
        return u.call(D, t, i);
      };

     case 3:
      return function(t, i, s) {
        return u.call(D, t, i, s);
      };
    }
    return function() {
      return u.apply(D, arguments);
    };
  };
  var g = "prototype";
  var $export = function(t, i, s) {
    var F = t & $export.F;
    var C = t & $export.G;
    var c = t & $export.P;
    var E = t & $export.B;
    var f = C ? u : t & $export.S ? u[i] || (u[i] = {}) : (u[i] || {})[g];
    var p = C ? D : D[i] || (D[i] = {});
    var B = p[g] || (p[g] = {});
    var h, m, y, w;
    if (C) {
      s = i;
    }
    for (h in s) {
      y = ((m = !F && f && void 0 !== f[h]) ? f : s)[h];
      w = E && m ? _ctx(y, u) : c && "function" == typeof y ? _ctx(Function.call, y) : y;
      if (f) {
        v(f, h, y, t & $export.U);
      }
      if (p[h] != y) {
        A(p, h, w);
      }
      if (c && B[h] != y) {
        B[h] = y;
      }
    }
  };
  u.core = D;
  $export.F = 1;
  $export.G = 2;
  $export.S = 4;
  $export.P = 8;
  $export.B = 16;
  $export.W = 32;
  $export.U = 64;
  $export.R = 128;
  var m = $export;
  var y = Math.ceil;
  var w = Math.floor;
  var _toInteger = function(u) {
    return isNaN(u = +u) ? 0 : (u > 0 ? w : y)(u);
  };
  var _defined = function(u) {
    if (null == u) {
      throw TypeError("Can't call method on  " + u);
    }
    return u;
  };
  var _stringAt = function(u) {
    return function(D, t) {
      var i = String(_defined(D));
      var s = _toInteger(t);
      var F = i.length;
      var C, c;
      if (s < 0 || s >= F) {
        return u ? "" : void 0;
      }
      return (C = i.charCodeAt(s)) < 55296 || C > 56319 || s + 1 === F || (c = i.charCodeAt(s + 1)) < 56320 || c > 57343 ? u ? i.charAt(s) : C : u ? i.slice(s, s + 2) : c - 56320 + (C - 55296 << 10) + 65536;
    };
  };
  var b = _stringAt(!1);
  m(m.P, "String", {
    codePointAt: function codePointAt(u) {
      return b(this, u);
    }
  });
  var S = Math.max;
  var x = Math.min;
  var _toAbsoluteIndex = function(u, D) {
    return (u = _toInteger(u)) < 0 ? S(u + D, 0) : x(u, D);
  };
  var P = String.fromCharCode;
  var O = String.fromCodePoint;
  m(m.S + m.F * (!!O && 1 != O.length), "String", {
    fromCodePoint: function fromCodePoint(u) {
      var D = arguments;
      var t = [];
      var i = arguments.length;
      var s = 0;
      var F;
      while (i > s) {
        F = +D[s++];
        if (_toAbsoluteIndex(F, 1114111) !== F) {
          throw RangeError(F + " is not a valid code point");
        }
        t.push(F < 65536 ? P(F) : P(55296 + ((F -= 65536) >> 10), F % 1024 + 56320));
      }
      return t.join("");
    }
  });
  var N = {
    Space_Separator: /[\u1680\u2000-\u200A\u202F\u205F\u3000]/,
    ID_Start: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/,
    ID_Continue: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
  };
  var k = {
    isSpaceSeparator: function isSpaceSeparator(u) {
      return "string" == typeof u && N.Space_Separator.test(u);
    },
    isIdStartChar: function isIdStartChar(u) {
      return "string" == typeof u && (u >= "a" && u <= "z" || u >= "A" && u <= "Z" || "$" === u || "_" === u || N.ID_Start.test(u));
    },
    isIdContinueChar: function isIdContinueChar(u) {
      return "string" == typeof u && (u >= "a" && u <= "z" || u >= "A" && u <= "Z" || u >= "0" && u <= "9" || "$" === u || "_" === u || "‌" === u || "‍" === u || N.ID_Continue.test(u));
    },
    isDigit: function isDigit(u) {
      return "string" == typeof u && /[0-9]/.test(u);
    },
    isHexDigit: function isHexDigit(u) {
      return "string" == typeof u && /[0-9A-Fa-f]/.test(u);
    }
  };
  var j;
  var _;
  var T;
  var I;
  var $;
  var q;
  var V;
  var L;
  var M;
  var z = function parse(u, D) {
    j = String(u);
    _ = "start";
    T = [];
    I = 0;
    $ = 1;
    q = 0;
    V = void 0;
    L = void 0;
    M = void 0;
    do {
      V = lex();
      Z[_]();
    } while ("eof" !== V.type);
    if ("function" == typeof D) {
      return internalize({
        "": M
      }, "", D);
    }
    return M;
  };
  function internalize(u, D, t) {
    var i = u[D];
    if (null != i && "object" == typeof i) {
      if (Array.isArray(i)) {
        for (var s = 0; s < i.length; s++) {
          var F = String(s);
          var C = internalize(i, F, t);
          if (void 0 === C) {
            delete i[F];
          } else {
            Object.defineProperty(i, F, {
              value: C,
              writable: !0,
              enumerable: !0,
              configurable: !0
            });
          }
        }
      } else {
        for (var c in i) {
          var A = internalize(i, c, t);
          if (void 0 === A) {
            delete i[c];
          } else {
            Object.defineProperty(i, c, {
              value: A,
              writable: !0,
              enumerable: !0,
              configurable: !0
            });
          }
        }
      }
    }
    return t.call(u, D, i);
  }
  var J;
  var G;
  var R;
  var U;
  var H;
  function lex() {
    J = "default";
    G = "";
    R = !1;
    U = 1;
    for (;;) {
      H = peek();
      var u = Q[J]();
      if (u) {
        return u;
      }
    }
  }
  function peek() {
    if (j[I]) {
      return String.fromCodePoint(j.codePointAt(I));
    }
  }
  function read() {
    var u = peek();
    if ("\n" === u) {
      $++;
      q = 0;
    } else if (u) {
      q += u.length;
    } else {
      q++;
    }
    if (u) {
      I += u.length;
    }
    return u;
  }
  var Q = {
    default: function default$1() {
      switch (H) {
       case "\t":
       case "\v":
       case "\f":
       case " ":
       case " ":
       case "\ufeff":
       case "\n":
       case "\r":
       case "\u2028":
       case "\u2029":
        read();
        return;

       case "/":
        read();
        J = "comment";
        return;

       case void 0:
        read();
        return newToken("eof");
      }
      if (k.isSpaceSeparator(H)) {
        read();
        return;
      }
      return Q[_]();
    },
    comment: function comment() {
      switch (H) {
       case "*":
        read();
        J = "multiLineComment";
        return;

       case "/":
        read();
        J = "singleLineComment";
        return;
      }
      throw invalidChar(read());
    },
    multiLineComment: function multiLineComment() {
      switch (H) {
       case "*":
        read();
        J = "multiLineCommentAsterisk";
        return;

       case void 0:
        throw invalidChar(read());
      }
      read();
    },
    multiLineCommentAsterisk: function multiLineCommentAsterisk() {
      switch (H) {
       case "*":
        read();
        return;

       case "/":
        read();
        J = "default";
        return;

       case void 0:
        throw invalidChar(read());
      }
      read();
      J = "multiLineComment";
    },
    singleLineComment: function singleLineComment() {
      switch (H) {
       case "\n":
       case "\r":
       case "\u2028":
       case "\u2029":
        read();
        J = "default";
        return;

       case void 0:
        read();
        return newToken("eof");
      }
      read();
    },
    value: function value() {
      switch (H) {
       case "{":
       case "[":
        return newToken("punctuator", read());

       case "n":
        read();
        literal("ull");
        return newToken("null", null);

       case "t":
        read();
        literal("rue");
        return newToken("boolean", !0);

       case "f":
        read();
        literal("alse");
        return newToken("boolean", !1);

       case "-":
       case "+":
        if ("-" === read()) {
          U = -1;
        }
        J = "sign";
        return;

       case ".":
        G = read();
        J = "decimalPointLeading";
        return;

       case "0":
        G = read();
        J = "zero";
        return;

       case "1":
       case "2":
       case "3":
       case "4":
       case "5":
       case "6":
       case "7":
       case "8":
       case "9":
        G = read();
        J = "decimalInteger";
        return;

       case "I":
        read();
        literal("nfinity");
        return newToken("numeric", 1 / 0);

       case "N":
        read();
        literal("aN");
        return newToken("numeric", NaN);

       case '"':
       case "'":
        R = '"' === read();
        G = "";
        J = "string";
        return;
      }
      throw invalidChar(read());
    },
    identifierNameStartEscape: function identifierNameStartEscape() {
      if ("u" !== H) {
        throw invalidChar(read());
      }
      read();
      var u = unicodeEscape();
      switch (u) {
       case "$":
       case "_":
        break;

       default:
        if (!k.isIdStartChar(u)) {
          throw invalidIdentifier();
        }
      }
      G += u;
      J = "identifierName";
    },
    identifierName: function identifierName() {
      switch (H) {
       case "$":
       case "_":
       case "‌":
       case "‍":
        G += read();
        return;

       case "\\":
        read();
        J = "identifierNameEscape";
        return;
      }
      if (k.isIdContinueChar(H)) {
        G += read();
        return;
      }
      return newToken("identifier", G);
    },
    identifierNameEscape: function identifierNameEscape() {
      if ("u" !== H) {
        throw invalidChar(read());
      }
      read();
      var u = unicodeEscape();
      switch (u) {
       case "$":
       case "_":
       case "‌":
       case "‍":
        break;

       default:
        if (!k.isIdContinueChar(u)) {
          throw invalidIdentifier();
        }
      }
      G += u;
      J = "identifierName";
    },
    sign: function sign$1() {
      switch (H) {
       case ".":
        G = read();
        J = "decimalPointLeading";
        return;

       case "0":
        G = read();
        J = "zero";
        return;

       case "1":
       case "2":
       case "3":
       case "4":
       case "5":
       case "6":
       case "7":
       case "8":
       case "9":
        G = read();
        J = "decimalInteger";
        return;

       case "I":
        read();
        literal("nfinity");
        return newToken("numeric", U * (1 / 0));

       case "N":
        read();
        literal("aN");
        return newToken("numeric", NaN);
      }
      throw invalidChar(read());
    },
    zero: function zero() {
      switch (H) {
       case ".":
        G += read();
        J = "decimalPoint";
        return;

       case "e":
       case "E":
        G += read();
        J = "decimalExponent";
        return;

       case "x":
       case "X":
        G += read();
        J = "hexadecimal";
        return;
      }
      return newToken("numeric", 0 * U);
    },
    decimalInteger: function decimalInteger() {
      switch (H) {
       case ".":
        G += read();
        J = "decimalPoint";
        return;

       case "e":
       case "E":
        G += read();
        J = "decimalExponent";
        return;
      }
      if (k.isDigit(H)) {
        G += read();
        return;
      }
      return newToken("numeric", U * Number(G));
    },
    decimalPointLeading: function decimalPointLeading() {
      if (k.isDigit(H)) {
        G += read();
        J = "decimalFraction";
        return;
      }
      throw invalidChar(read());
    },
    decimalPoint: function decimalPoint() {
      switch (H) {
       case "e":
       case "E":
        G += read();
        J = "decimalExponent";
        return;
      }
      if (k.isDigit(H)) {
        G += read();
        J = "decimalFraction";
        return;
      }
      return newToken("numeric", U * Number(G));
    },
    decimalFraction: function decimalFraction() {
      switch (H) {
       case "e":
       case "E":
        G += read();
        J = "decimalExponent";
        return;
      }
      if (k.isDigit(H)) {
        G += read();
        return;
      }
      return newToken("numeric", U * Number(G));
    },
    decimalExponent: function decimalExponent() {
      switch (H) {
       case "+":
       case "-":
        G += read();
        J = "decimalExponentSign";
        return;
      }
      if (k.isDigit(H)) {
        G += read();
        J = "decimalExponentInteger";
        return;
      }
      throw invalidChar(read());
    },
    decimalExponentSign: function decimalExponentSign() {
      if (k.isDigit(H)) {
        G += read();
        J = "decimalExponentInteger";
        return;
      }
      throw invalidChar(read());
    },
    decimalExponentInteger: function decimalExponentInteger() {
      if (k.isDigit(H)) {
        G += read();
        return;
      }
      return newToken("numeric", U * Number(G));
    },
    hexadecimal: function hexadecimal() {
      if (k.isHexDigit(H)) {
        G += read();
        J = "hexadecimalInteger";
        return;
      }
      throw invalidChar(read());
    },
    hexadecimalInteger: function hexadecimalInteger() {
      if (k.isHexDigit(H)) {
        G += read();
        return;
      }
      return newToken("numeric", U * Number(G));
    },
    string: function string() {
      switch (H) {
       case "\\":
        read();
        G += escape();
        return;

       case '"':
        if (R) {
          read();
          return newToken("string", G);
        }
        G += read();
        return;

       case "'":
        if (!R) {
          read();
          return newToken("string", G);
        }
        G += read();
        return;

       case "\n":
       case "\r":
        throw invalidChar(read());

       case "\u2028":
       case "\u2029":
        separatorChar(H);
        break;

       case void 0:
        throw invalidChar(read());
      }
      G += read();
    },
    start: function start() {
      switch (H) {
       case "{":
       case "[":
        return newToken("punctuator", read());
      }
      J = "value";
    },
    beforePropertyName: function beforePropertyName() {
      switch (H) {
       case "$":
       case "_":
        G = read();
        J = "identifierName";
        return;

       case "\\":
        read();
        J = "identifierNameStartEscape";
        return;

       case "}":
        return newToken("punctuator", read());

       case '"':
       case "'":
        R = '"' === read();
        J = "string";
        return;
      }
      if (k.isIdStartChar(H)) {
        G += read();
        J = "identifierName";
        return;
      }
      throw invalidChar(read());
    },
    afterPropertyName: function afterPropertyName() {
      if (":" === H) {
        return newToken("punctuator", read());
      }
      throw invalidChar(read());
    },
    beforePropertyValue: function beforePropertyValue() {
      J = "value";
    },
    afterPropertyValue: function afterPropertyValue() {
      switch (H) {
       case ",":
       case "}":
        return newToken("punctuator", read());
      }
      throw invalidChar(read());
    },
    beforeArrayValue: function beforeArrayValue() {
      if ("]" === H) {
        return newToken("punctuator", read());
      }
      J = "value";
    },
    afterArrayValue: function afterArrayValue() {
      switch (H) {
       case ",":
       case "]":
        return newToken("punctuator", read());
      }
      throw invalidChar(read());
    },
    end: function end() {
      throw invalidChar(read());
    }
  };
  function newToken(u, D) {
    return {
      type: u,
      value: D,
      line: $,
      column: q
    };
  }
  function literal(u) {
    for (var D = 0, t = u; D < t.length; D += 1) {
      var i = t[D];
      if (peek() !== i) {
        throw invalidChar(read());
      }
      read();
    }
  }
  function escape() {
    switch (peek()) {
     case "b":
      read();
      return "\b";

     case "f":
      read();
      return "\f";

     case "n":
      read();
      return "\n";

     case "r":
      read();
      return "\r";

     case "t":
      read();
      return "\t";

     case "v":
      read();
      return "\v";

     case "0":
      read();
      if (k.isDigit(peek())) {
        throw invalidChar(read());
      }
      return "\0";

     case "x":
      read();
      return hexEscape();

     case "u":
      read();
      return unicodeEscape();

     case "\n":
     case "\u2028":
     case "\u2029":
      read();
      return "";

     case "\r":
      read();
      if ("\n" === peek()) {
        read();
      }
      return "";

     case "1":
     case "2":
     case "3":
     case "4":
     case "5":
     case "6":
     case "7":
     case "8":
     case "9":
     case void 0:
      throw invalidChar(read());
    }
    return read();
  }
  function hexEscape() {
    var u = "";
    var D = peek();
    if (!k.isHexDigit(D)) {
      throw invalidChar(read());
    }
    u += read();
    D = peek();
    if (!k.isHexDigit(D)) {
      throw invalidChar(read());
    }
    u += read();
    return String.fromCodePoint(parseInt(u, 16));
  }
  function unicodeEscape() {
    var u = "";
    var D = 4;
    while (D-- > 0) {
      var t = peek();
      if (!k.isHexDigit(t)) {
        throw invalidChar(read());
      }
      u += read();
    }
    return String.fromCodePoint(parseInt(u, 16));
  }
  var Z = {
    start: function start() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      push();
    },
    beforePropertyName: function beforePropertyName() {
      switch (V.type) {
       case "identifier":
       case "string":
        L = V.value;
        _ = "afterPropertyName";
        return;

       case "punctuator":
        pop();
        return;

       case "eof":
        throw invalidEOF();
      }
    },
    afterPropertyName: function afterPropertyName() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      _ = "beforePropertyValue";
    },
    beforePropertyValue: function beforePropertyValue() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      push();
    },
    beforeArrayValue: function beforeArrayValue() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      if ("punctuator" === V.type && "]" === V.value) {
        pop();
        return;
      }
      push();
    },
    afterPropertyValue: function afterPropertyValue() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      switch (V.value) {
       case ",":
        _ = "beforePropertyName";
        return;

       case "}":
        pop();
      }
    },
    afterArrayValue: function afterArrayValue() {
      if ("eof" === V.type) {
        throw invalidEOF();
      }
      switch (V.value) {
       case ",":
        _ = "beforeArrayValue";
        return;

       case "]":
        pop();
      }
    },
    end: function end() {}
  };
  function push() {
    var u;
    switch (V.type) {
     case "punctuator":
      switch (V.value) {
       case "{":
        u = {};
        break;

       case "[":
        u = [];
      }
      break;

     case "null":
     case "boolean":
     case "numeric":
     case "string":
      u = V.value;
    }
    if (void 0 === M) {
      M = u;
    } else {
      var D = T[T.length - 1];
      if (Array.isArray(D)) {
        D.push(u);
      } else {
        Object.defineProperty(D, L, {
          value: u,
          writable: !0,
          enumerable: !0,
          configurable: !0
        });
      }
    }
    if (null !== u && "object" == typeof u) {
      T.push(u);
      if (Array.isArray(u)) {
        _ = "beforeArrayValue";
      } else {
        _ = "beforePropertyName";
      }
    } else {
      var t = T[T.length - 1];
      if (null == t) {
        _ = "end";
      } else if (Array.isArray(t)) {
        _ = "afterArrayValue";
      } else {
        _ = "afterPropertyValue";
      }
    }
  }
  function pop() {
    T.pop();
    var u = T[T.length - 1];
    if (null == u) {
      _ = "end";
    } else if (Array.isArray(u)) {
      _ = "afterArrayValue";
    } else {
      _ = "afterPropertyValue";
    }
  }
  function invalidChar(u) {
    if (void 0 === u) {
      return syntaxError("JSON5: invalid end of input at " + $ + ":" + q);
    }
    return syntaxError("JSON5: invalid character '" + formatChar(u) + "' at " + $ + ":" + q);
  }
  function invalidEOF() {
    return syntaxError("JSON5: invalid end of input at " + $ + ":" + q);
  }
  function invalidIdentifier() {
    return syntaxError("JSON5: invalid identifier character at " + $ + ":" + (q -= 5));
  }
  function separatorChar(u) {
    console.warn("JSON5: '" + formatChar(u) + "' in strings is not valid ECMAScript; consider escaping");
  }
  function formatChar(u) {
    var D = {
      "'": "\\'",
      '"': '\\"',
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "\t": "\\t",
      "\v": "\\v",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    if (D[u]) {
      return D[u];
    }
    if (u < " ") {
      var t = u.charCodeAt(0).toString(16);
      return "\\x" + ("00" + t).substring(t.length);
    }
    return u;
  }
  function syntaxError(u) {
    var D = new SyntaxError(u);
    D.lineNumber = $;
    D.columnNumber = q;
    return D;
  }
  var K = function stringify(u, D, t) {
    var i = [];
    var s = "";
    var F;
    var C;
    var c = "";
    var A;
    if (null != D && "object" == typeof D && !Array.isArray(D)) {
      t = D.space;
      A = D.quote;
      D = D.replacer;
    }
    if ("function" == typeof D) {
      C = D;
    } else if (Array.isArray(D)) {
      F = [];
      for (var E = 0, f = D; E < f.length; E += 1) {
        var p = f[E];
        var B = void 0;
        if ("string" == typeof p) {
          B = p;
        } else if ("number" == typeof p || p instanceof String || p instanceof Number) {
          B = String(p);
        }
        if (void 0 !== B && F.indexOf(B) < 0) {
          F.push(B);
        }
      }
    }
    if (t instanceof Number) {
      t = Number(t);
    } else if (t instanceof String) {
      t = String(t);
    }
    if ("number" == typeof t) {
      if (t > 0) {
        t = Math.min(10, Math.floor(t));
        c = "          ".substr(0, t);
      }
    } else if ("string" == typeof t) {
      c = t.substr(0, 10);
    }
    return serializeProperty("", {
      "": u
    });
    function serializeProperty(u, D) {
      var t = D[u];
      if (null != t) {
        if ("function" == typeof t.toJSON5) {
          t = t.toJSON5(u);
        } else if ("function" == typeof t.toJSON) {
          t = t.toJSON(u);
        }
      }
      if (C) {
        t = C.call(D, u, t);
      }
      if (t instanceof Number) {
        t = Number(t);
      } else if (t instanceof String) {
        t = String(t);
      } else if (t instanceof Boolean) {
        t = t.valueOf();
      }
      switch (t) {
       case null:
        return "null";

       case !0:
        return "true";

       case !1:
        return "false";
      }
      if ("string" == typeof t) {
        return quoteString(t);
      }
      if ("number" == typeof t) {
        return String(t);
      }
      if ("object" == typeof t) {
        return Array.isArray(t) ? serializeArray(t) : serializeObject(t);
      }
      return;
    }
    function quoteString(u) {
      var D = {
        "'": .1,
        '"': .2
      };
      var t = {
        "'": "\\'",
        '"': '\\"',
        "\\": "\\\\",
        "\b": "\\b",
        "\f": "\\f",
        "\n": "\\n",
        "\r": "\\r",
        "\t": "\\t",
        "\v": "\\v",
        "\0": "\\0",
        "\u2028": "\\u2028",
        "\u2029": "\\u2029"
      };
      var i = "";
      for (var s = 0; s < u.length; s++) {
        var F = u[s];
        switch (F) {
         case "'":
         case '"':
          D[F]++;
          i += F;
          continue;

         case "\0":
          if (k.isDigit(u[s + 1])) {
            i += "\\x00";
            continue;
          }
        }
        if (t[F]) {
          i += t[F];
          continue;
        }
        if (F < " ") {
          var C = F.charCodeAt(0).toString(16);
          i += "\\x" + ("00" + C).substring(C.length);
          continue;
        }
        i += F;
      }
      var c = A || Object.keys(D).reduce((function(u, t) {
        return D[u] < D[t] ? u : t;
      }));
      return c + (i = i.replace(new RegExp(c, "g"), t[c])) + c;
    }
    function serializeObject(u) {
      if (i.indexOf(u) >= 0) {
        throw TypeError("Converting circular structure to JSON5");
      }
      i.push(u);
      var D = s;
      s += c;
      var t = [];
      for (var C = 0, A = F || Object.keys(u); C < A.length; C += 1) {
        var E = A[C];
        var f = serializeProperty(E, u);
        if (void 0 !== f) {
          var p = serializeKey(E) + ":";
          if ("" !== c) {
            p += " ";
          }
          t.push(p += f);
        }
      }
      var B;
      if (0 === t.length) {
        B = "{}";
      } else {
        var h;
        if ("" === c) {
          B = "{" + (h = t.join(",")) + "}";
        } else {
          h = t.join(",\n" + s);
          B = "{\n" + s + h + ",\n" + D + "}";
        }
      }
      i.pop();
      s = D;
      return B;
    }
    function serializeKey(u) {
      if (0 === u.length) {
        return quoteString(u);
      }
      var D = String.fromCodePoint(u.codePointAt(0));
      if (!k.isIdStartChar(D)) {
        return quoteString(u);
      }
      for (var t = D.length; t < u.length; t++) {
        if (!k.isIdContinueChar(String.fromCodePoint(u.codePointAt(t)))) {
          return quoteString(u);
        }
      }
      return u;
    }
    function serializeArray(u) {
      if (i.indexOf(u) >= 0) {
        throw TypeError("Converting circular structure to JSON5");
      }
      i.push(u);
      var D = s;
      s += c;
      var t = [];
      for (var F = 0; F < u.length; F++) {
        var C = serializeProperty(String(F), u);
        t.push(void 0 !== C ? C : "null");
      }
      var A;
      if (0 === t.length) {
        A = "[]";
      } else if ("" === c) {
        A = "[" + t.join(",") + "]";
      } else {
        var E = t.join(",\n" + s);
        A = "[\n" + s + E + ",\n" + D + "]";
      }
      i.pop();
      s = D;
      return A;
    }
  };
  return {
    parse: z,
    stringify: K
  };
}();

var A = c.exports;

function hasGraphQLSP(u) {
  if (!u.compilerOptions) {
    console.warn("Missing compilerOptions object in tsconfig.json.");
    return !1;
  }
  if (!u.compilerOptions.plugins) {
    console.warn("Missing plugins array in tsconfig.json.");
    return !1;
  }
  var D = u.compilerOptions.plugins.find((u => "@0no-co/graphqlsp" === u.name || "gql.tada/lsp" === u.name));
  if (!D) {
    console.warn("Missing @0no-co/graphqlsp plugin in tsconfig.json.");
    return !1;
  }
  if (!D.schema) {
    console.warn("Missing schema property in @0no-co/graphqlsp plugin in tsconfig.json.");
    return !1;
  }
  if (!D.tadaOutputLocation) {
    console.warn("Missing tadaOutputLocation property in @0no-co/graphqlsp plugin in tsconfig.json.");
    return !1;
  }
  return !0;
}

var loadSchema = async (i, s) => {
  var F;
  var C;
  try {
    if ("object" == typeof s) {
      F = new URL(s.url);
      C = {
        headers: s.headers
      };
    } else {
      F = new URL(s);
    }
  } catch (u) {}
  if (F) {
    var c = await fetch(F.toString(), {
      method: "POST",
      headers: C ? {
        ...C.headers || {},
        "Content-Type": "application/json"
      } : {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        query: t.getIntrospectionQuery({
          descriptions: !0,
          schemaDescription: !1,
          inputValueDeprecation: !1,
          directiveIsRepeatable: !1,
          specifiedByUrl: !1
        })
      })
    });
    if (c.ok) {
      var A = await c.json();
      if (A.data) {
        var E = A.data;
        try {
          return t.buildClientSchema(E);
        } catch (u) {
          console.error(`Got schema error for ${u.message}`);
        }
      } else {
        console.error(`Got invalid response ${JSON.stringify(A)}`);
      }
    } else {
      console.error(`Got invalid response ${await c.text()}`);
    }
  } else if ("string" == typeof s) {
    var f = ".json" === D.extname(s);
    var p = D.resolve(i, s);
    var B = await u.promises.readFile(p, "utf-8");
    var h = f ? JSON.parse(B) : t.buildSchema(B);
    return "__schema" in h ? t.buildClientSchema(h) : h;
  }
};

async function generateSchema(i, {headers: s, output: F, cwd: C = process.cwd()}) {
  var c;
  try {
    c = new URL(i);
  } catch (u) {}
  var E;
  if (c) {
    var f = await fetch(c.toString(), {
      method: "POST",
      headers: {
        ...s,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        query: t.getIntrospectionQuery({
          descriptions: !0,
          schemaDescription: !1,
          inputValueDeprecation: !1,
          directiveIsRepeatable: !1,
          specifiedByUrl: !1
        })
      })
    });
    if (f.ok) {
      var p = await f.text();
      try {
        var B = JSON.parse(p);
        if (B.data) {
          E = B.data;
        } else {
          console.error(`Got invalid response ${JSON.stringify(B)}`);
          return;
        }
      } catch (u) {
        console.error(`Got invalid JSON ${p}`);
        return;
      }
    } else {
      console.error(`Got invalid response ${await f.text()}`);
      return;
    }
  } else {
    var h = D.resolve(C, i);
    var v = await u.promises.readFile(h, "utf-8");
    try {
      E = JSON.parse(v);
    } catch (u) {
      console.error(`Got invalid JSON ${v}`);
      return;
    }
  }
  var g = t.buildClientSchema(E);
  var m = F;
  if (!m) {
    var y = D.resolve(C, "tsconfig.json");
    if (!u.existsSync(y)) {
      console.error("Could not find a tsconfig in the working-directory.");
      return;
    }
    var w = await u.promises.readFile(y, "utf-8");
    var b;
    try {
      b = A.parse(w);
    } catch (u) {
      console.error(u);
      return;
    }
    if (!hasGraphQLSP(b)) {
      console.error('Could not find a "@0no-co/graphqlsp" plugin in your tsconfig.');
      return;
    }
    var S = b.compilerOptions.plugins.find((u => "@0no-co/graphqlsp" === u.name));
    m = S.schema;
    if (!S.schema.endsWith(".graphql")) {
      console.error(`Found "${S.schema}" which is not a path to a GraphQL Schema.`);
      return;
    }
  }
  await u.promises.writeFile(D.resolve(C, m), t.printSchema(g), "utf-8");
}

async function generateTadaTypes(s = !1, F = process.cwd()) {
  var C = D.resolve(F, "tsconfig.json");
  if (!u.existsSync(C)) {
    console.error("Missing tsconfig.json");
    return;
  }
  var c = i.resolveTypeScriptRootDir(u.readFileSync, C) || F;
  var E = await u.promises.readFile(D.resolve(c, "tsconfig.json"), "utf-8");
  var f;
  try {
    f = A.parse(E);
  } catch (u) {
    console.error(u);
    return;
  }
  if (!hasGraphQLSP(f)) {
    return;
  }
  var p = f.compilerOptions.plugins.find((u => "@0no-co/graphqlsp" === u.name || "gql.tda/cli" === u.name));
  await async function ensureTadaIntrospection(s, F, C = process.cwd(), c = !0) {
    try {
      await (async () => {
        var A = await loadSchema(C, s);
        if (!A) {
          console.error("Something went wrong while trying to load the schema.");
          return;
        }
        var E = i.minifyIntrospection(t.introspectionFromSchema(A, {
          descriptions: !1
        }));
        var f = await i.outputIntrospectionFile(E, {
          fileType: F,
          shouldPreprocess: c
        });
        var p = D.resolve(C, F);
        await u.promises.writeFile(p, f);
      })();
    } catch (u) {
      console.error("Something went wrong while writing the introspection file", u);
    }
  }(p.schema, p.tadaOutputLocation, F, s);
}

var E = ((u, D) => new o(u, D))("gql.tada");

E.version(process.env.npm_package_version || "0.0.0");

exports.default = async function main() {
  E.command("generate-schema <target>").describe("Generate a GraphQL schema from a URL or introspection file, this will be generated from the parameters to this command.").option("--header", "Pass a header to be used when fetching the introspection.").option("--output", 'A specialised location to output the schema to, by default we\'ll output the schema to the "schema" defined in your "tsconfig".').example("generate-schema https://example.com --header 'Authorization: Bearer token'").example("generate-schema ./introspection.json").action((async (u, D) => {
    var t = {};
    if ("string" == typeof D.header) {
      var [i, s] = D.header.split(":").map((u => u.trim()));
      t[i] = s;
    } else if (Array.isArray(D.header)) {
      D.header.forEach((u => {
        var [D, i] = u.split(":").map((u => u.trim()));
        t[D] = i;
      }));
    }
    return generateSchema(u, {
      headers: t,
      output: D.output
    });
  })).command("generate-output").option("--disable-preprocessing", "Disables pre-processing, which is an internal introspection format generated ahead of time").describe('Generate the gql.tada types file, this will look for your "tsconfig.json" and use the "@0no-co/graphqlsp" configuration to generate the file.').action((u => generateTadaTypes(!u["disable-preprocessing"] && "false" !== u["disable-preprocessing"])));
  E.parse(process.argv);
};

exports.generateSchema = generateSchema;

exports.generateTadaTypes = generateTadaTypes;
//# sourceMappingURL=gql-tada-cli.js.map
