{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * BCS implementation {@see https://github.com/diem/bcs } for JavaScript.\n * Intended to be used for Move applications; supports both NodeJS and browser.\n *\n * For more details and examples {@see README.md }.\n *\n * @module bcs\n * @property {BcsReader}\n */\n\nimport { fromB58, toB58 } from './b58.js';\nimport { fromB64, toB64 } from './b64.js';\nimport type { BcsTypeOptions } from './bcs-type.js';\nimport { BcsType, isSerializedBcs, SerializedBcs } from './bcs-type.js';\nimport { bcs } from './bcs.js';\nimport { fromHEX, toHEX } from './hex.js';\nimport { BcsReader } from './reader.js';\nimport type { InferBcsInput, InferBcsType } from './types.js';\nimport { decodeStr, encodeStr, splitGenericParameters } from './utils.js';\nimport type { BcsWriterOptions } from './writer.js';\nimport { BcsWriter } from './writer.js';\n\nexport * from './legacy-registry.js';\n\n// Re-export all encoding dependencies.\nexport {\n\tbcs,\n\tBcsType,\n\ttype BcsTypeOptions,\n\tSerializedBcs,\n\tisSerializedBcs,\n\ttoB58,\n\tfromB58,\n\ttoB64,\n\tfromB64,\n\tfromHEX,\n\ttoHEX,\n\tencodeStr,\n\tdecodeStr,\n\tsplitGenericParameters,\n\tBcsReader,\n\tBcsWriter,\n\ttype BcsWriterOptions,\n\ttype InferBcsInput,\n\ttype InferBcsType,\n};\n"],
  "mappings": "AAaA,SAAS,SAAS,aAAa;AAC/B,SAAS,SAAS,aAAa;AAE/B,SAAS,SAAS,iBAAiB,qBAAqB;AACxD,SAAS,WAAW;AACpB,SAAS,SAAS,aAAa;AAC/B,SAAS,iBAAiB;AAE1B,SAAS,WAAW,WAAW,8BAA8B;AAE7D,SAAS,iBAAiB;AAE1B,cAAc;",
  "names": []
}
